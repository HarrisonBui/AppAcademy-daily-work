{"version":3,"sources":["webpack:///webpack/bootstrap f7084745a8baa7a98ebb","webpack:///./lib/asteroids.js","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/game.js","webpack:///./lib/asteroid.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACjBD;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;;AAGA;;;;;;;ACpCA;AACA;AACA;AACA,2CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,kBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;;;AAGA;;;;;;;AC9CA;AACA;;AAEA;;AAEA;AACA,4BAA2B,+DAA+D;AAC1F;;AAEA;;;;;;;ACTA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f7084745a8baa7a98ebb","const Util = require(\"./util.js\");\nconst MovingObject = require(\"./moving_object.js\");\nconst Game = require(\"./game.js\");\nconst GameView = require(\"./game_view.js\");\nwindow.MovingObject = MovingObject;\nwindow.Util = Util;\nwindow.Game = Game;\nwindow.GameView = GameView;\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"game-canvas\");\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/asteroids.js\n// module id = 0\n// module chunks = 0","const Util = {\n  inherits (childClass, parentClass) {\n    function Surrogate(){}\n    childClass.prototype = Object.create(parentClass.prototype);\n    childClass.prototype.constructor = childClass;\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 1\n// module chunks = 0","// MovingObject.prototype.isCollidedWith(otherMovingObject)\n\nconst MovingObject = function (options){\n  this.pos = options.pos;\n  this.vel = options.vel;\n  this.radius = options.radius;\n  this.color = options.color;\n};\n\nMovingObject.prototype.draw = function(ctx){\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    false\n  );\n\n  ctx.fill();\n};\n\nMovingObject.prototype.move = function () {\n  console.log(this.pos);\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n};\n\nconst mo = new MovingObject(\n  { pos: [30, 30], vel: [10, 10], radius: 5, color: \"#00FF00\"}\n);\n\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 2\n// module chunks = 0","// Holds collections of the asteroids, bullets, and your ship.\n// Game.prototype.step method calls Game.prototype.move on all the objects, and Game.prototype.checkCollisions checks for colliding objects.\n// Game.prototype.draw(ctx) draws the game.\n// Keeps track of dimensions of the space; wraps objects around when they drift off the screen.\nconst Asteroid = require(\"./asteroid.js\");\n\nconst Game = function () {\n  this.DIM_X = 100;\n  this.DIM_Y = 100;\n  this.NUM_ASTEROIDS = 20;\n};\n\nGame.prototype.addAsteroids = function(){\n  this.asteroids = [];\n  for (let i = 0; i < this.NUM_ASTEROIDS; i++) {\n    let pos = this.randomPosition();\n    let asteroid = new Asteroid(pos);\n    this.asteroids.push(asteroid);\n  }\n\n  return this.asteroids;\n};\n\nGame.prototype.randomPosition = function(){\n  let x = Math.random() * this.DIM_X;\n  let y = Math.random() * this.DIM_Y;\n  return ([x, y]);\n};\n\n\nGame.prototype.draw = function(ctx){\n\n  ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n\n  for (let i = 0; i < this.NUM_ASTEROIDS; i++) {\n    this.asteroids[i].draw(ctx);\n  }\n};\n\nGame.prototype.moveObjects = function() {\n  for (let i = 0; i < this.NUM_ASTEROIDS; i++) {\n    this.asteroids[i].move();\n  }\n};\n\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","const Util = require(\"./util.js\");\nconst MovingObject = require(\"./moving_object.js\");\n\nUtil.inherits(Asteriod, MovingObject);\n\nfunction Asteriod(pos) {\n  MovingObject.call(this, {pos: pos, vel: Util.randomVec(20), radius: 5, color: \"#00FF00\"});\n}\n\nmodule.exports = Asteriod;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/asteroid.js\n// module id = 4\n// module chunks = 0","// Stores a Game instance.\n// Stores a canvas context to draw the game into.\n// Installs key listeners to move the ship and fire bullets.\n// Installs a timer to call Game.prototype.step.\nconst Game = require(\"./game.js\");\n\nconst GameView = function (ctx, game) {\n  this.ctx = ctx;\n  this.game = game;\n};\n\n\nGameView.prototype.start = function(canvasEl) {\n\n  const ctx = canvasEl.getContext(\"2d\");\n\n\n  const animateCallback = () => {\n    this.game.moveObjects();\n    this.game.draw(ctx);\n      //this will call our animateCallback again, but only when the browser\n      //is ready, usually every 1/60th of a second\n      // requestAnimationFrame(animateCallback);\n      setTimeout(animateCallback, 20);\n      //if we didn't know about requestAnimationFrame, we could use setTimeout\n      //setTimeout(animateCallback, 1000/60);\n    };\n\n    //this will cause the first render and start the endless triggering of\n    //the function using requestAnimationFrame\n    animateCallback();\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}